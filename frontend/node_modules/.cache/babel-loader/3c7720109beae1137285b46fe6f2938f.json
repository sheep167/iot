{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcyiu\\\\PycharmProjects\\\\iot\\\\frontend\\\\my-app\\\\src\\\\Pages\\\\Device.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Device.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Device = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [order, setOrder] = useState({\n    name: \"asc\",\n    type: \"asc\",\n    _id: \"asc\"\n  });\n  const execute = useCallback(() => {\n    const options = {\n      method: \"GET\",\n      url: \"http://localhost:5000/api/v1/user/all_devices\",\n      withCredentials: true\n    };\n    axios(options).then(r => setData(r.data.data)).then(Promise.all(data.map(async d => {\n      const options = {\n        method: \"GET\",\n        url: `http://localhost:5000/api/v1/device/${d._id}/latest_telemetry`,\n        withCredentials: true\n      };\n      let r = await axios(options);\n      data[d] = { ...data[d],\n        ...{\n          latest_telemetry: r.data\n        }\n      };\n      setData(data);\n    })));\n  }, [JSON.stringify(data)]);\n  useEffect(() => {\n    execute();\n    const intervalId = setInterval(() => execute(), 3000);\n    return () => clearInterval(intervalId);\n  }, [execute, JSON.stringify(data)]);\n\n  const sort = colName => {\n    if (order[colName] === \"dec\") {\n      const sortedData = [...data].sort((a, b) => a[colName].toLowerCase() > b[colName].toLowerCase() ? 1 : -1);\n      setData(sortedData);\n      setOrder({ ...order,\n        [colName]: \"asc\"\n      });\n    }\n\n    if (order[colName] === \"asc\") {\n      const sortedData = [...data].sort((a, b) => a[colName].toLowerCase() < b[colName].toLowerCase() ? 1 : -1);\n      setData(sortedData);\n      setOrder({ ...order,\n        [colName]: \"dec\"\n      });\n    }\n  };\n\n  const timestampToDate = ts => {\n    let date = new Date(ts);\n    return date.toLocaleString();\n  };\n\n  const redirectToDashboard = _id => {\n    ;\n    window.location = `/dashboard?id=${_id}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"name\"),\n            children: [\"Device Name \", order.name === \"asc\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 94\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 138\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"type\"),\n            children: [\"Device Type  \", order.type === \"asc\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 95\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 139\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"_id\"),\n            children: [\"ID \", order._id === \"asc\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 83\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-arrow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 127\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latest Telemetry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"At Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.latest_telemetry === undefined ? \"\" : JSON.stringify(d.latest_telemetry.telemetry)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.latest_telemetry === undefined ? \"\" : timestampToDate(d.latest_telemetry.ts)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn table-btn\",\n              onClick: () => redirectToDashboard(d._id),\n              children: \"Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, d._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Device, \"2sX6vU//KLAYrHxgSi7x9wPqMEI=\");\n\n_c = Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["C:/Users/marcyiu/PycharmProjects/iot/frontend/my-app/src/Pages/Device.js"],"names":["React","useCallback","useEffect","useState","axios","Device","data","setData","order","setOrder","name","type","_id","execute","options","method","url","withCredentials","then","r","Promise","all","map","d","latest_telemetry","JSON","stringify","intervalId","setInterval","clearInterval","sort","colName","sortedData","a","b","toLowerCase","timestampToDate","ts","date","Date","toLocaleString","redirectToDashboard","window","location","undefined","telemetry"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Device.css'\r\n\r\nexport const Device = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [order, setOrder] = useState({name: \"asc\", type: \"asc\", _id: \"asc\"})\r\n\r\n\r\n\r\n    const execute = useCallback(() => {\r\n        const options = {\r\n            method: \"GET\",\r\n            url: \"http://localhost:5000/api/v1/user/all_devices\",\r\n            withCredentials: true\r\n        }\r\n        axios(options)\r\n        .then(r => setData(r.data.data))\r\n        .then(Promise.all(data.map(async (d) => {\r\n            const options = {\r\n                method: \"GET\",\r\n                url: `http://localhost:5000/api/v1/device/${d._id}/latest_telemetry`,\r\n                withCredentials: true\r\n            }\r\n            let r = await axios(options);\r\n            data[d] = {...data[d], ...{latest_telemetry: r.data}};\r\n            setData(data);\r\n        })))\r\n    }, [JSON.stringify(data)])\r\n\r\n    useEffect(() => {\r\n        execute();\r\n        const intervalId = setInterval(() => execute(), 3000);\r\n        return () => clearInterval(intervalId)\r\n    }, [execute, JSON.stringify(data)])\r\n\r\n    const sort = (colName) => {\r\n        if (order[colName] === \"dec\") {\r\n            const sortedData = [...data].sort((a, b) => \r\n                a[colName].toLowerCase() > b[colName].toLowerCase() ? 1 : -1\r\n            );\r\n            setData(sortedData);\r\n            setOrder({...order, [colName]: \"asc\"});\r\n        }\r\n        if (order[colName] === \"asc\") {\r\n            const sortedData = [...data].sort((a, b) => \r\n                a[colName].toLowerCase() < b[colName].toLowerCase() ? 1 : -1\r\n            );\r\n            setData(sortedData);\r\n            setOrder({...order, [colName]: \"dec\"});\r\n        }\r\n    }\r\n\r\n    const timestampToDate = (ts) => {\r\n        let date = new Date(ts);\r\n        return date.toLocaleString();\r\n    }\r\n\r\n    const redirectToDashboard = (_id) => {;\r\n        window.location = `/dashboard?id=${_id}`\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={() => sort(\"name\")}>Device Name {order.name === \"asc\" ? <i className=\"fa-solid fa-arrow-down\"></i>: <i className=\"fa-solid fa-arrow-up\"></i>}</th>\r\n                        <th onClick={() => sort(\"type\")}>Device Type  {order.type === \"asc\" ? <i className=\"fa-solid fa-arrow-down\"></i>: <i className=\"fa-solid fa-arrow-up\"></i>}</th>\r\n                        <th onClick={() => sort(\"_id\")}>ID {order._id === \"asc\" ? <i className=\"fa-solid fa-arrow-down\"></i>: <i className=\"fa-solid fa-arrow-up\"></i>}</th>\r\n                        <th>Latest Telemetry</th>\r\n                        <th>At Time</th>\r\n                        <th>To Dashboard</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { data.map((d) => (\r\n                        <tr key={d._id}>\r\n                            <td>{d.name}</td>\r\n                            <td>{d.type}</td>\r\n                            <td>{d._id}</td>\r\n                            <td>{d.latest_telemetry === undefined ? \"\" : JSON.stringify(d.latest_telemetry.telemetry)}</td>\r\n                            <td>{d.latest_telemetry === undefined ? \"\" : timestampToDate(d.latest_telemetry.ts)}</td>\r\n                            <td><button className=\"btn table-btn\" onClick={() => redirectToDashboard(d._id)}>Go</button></td>\r\n                        </tr>\r\n                    )) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}