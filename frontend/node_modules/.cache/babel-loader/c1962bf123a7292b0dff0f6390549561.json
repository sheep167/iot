{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marcyiu\\\\PycharmProjects\\\\iot\\\\frontend\\\\my-app\\\\src\\\\Pages\\\\Device.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { DeviceCard } from './DeviceCard';\nimport './Device.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Device = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [order, setOrder] = useState({\n    name: \"asc\",\n    type: \"asc\",\n    _id: \"asc\"\n  });\n\n  const getDevices = () => {\n    const token = Cookies.get(\"token\");\n    const options = {\n      method: \"GET\",\n      url: \"http://localhost:5000/api/v1/user/all_devices\",\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    };\n    axios(options).then(r => setData(r.data.data));\n  };\n\n  useEffect(() => getDevices(), []);\n\n  const sort = colName => {\n    console.log(order);\n\n    if (order.colName === \"asc\") {\n      console.log(\"tttttt\");\n      const sortedData = [...data].sort((a, b) => a[colName].toLowerCase() > b[colName].toLowerCase() ? 1 : -1);\n      setData(sortedData);\n      setOrder(\"dec\");\n    }\n\n    if (order.colName === \"dec\") {\n      const sortedData = [...data].sort((a, b) => a[colName].toLowerCase() < b[colName].toLowerCase() ? 1 : -1);\n      setData(sortedData);\n      setOrder(\"asc\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"name\"),\n            children: \"Device Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"type\"),\n            children: \"Device Type \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => sort(\"_id\"),\n            children: \"ID \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, d._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Device, \"FgleXC+bA9qfp9EGuFr7DgZNnGs=\");\n\n_c = Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["C:/Users/marcyiu/PycharmProjects/iot/frontend/my-app/src/Pages/Device.js"],"names":["React","useEffect","useState","Cookies","axios","DeviceCard","Device","data","setData","order","setOrder","name","type","_id","getDevices","token","get","options","method","url","headers","then","r","sort","colName","console","log","sortedData","a","b","toLowerCase","map","d"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { DeviceCard } from './DeviceCard';\r\nimport './Device.css'\r\n\r\nexport const Device = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [order, setOrder] = useState({name: \"asc\", type: \"asc\", _id: \"asc\"})\r\n\r\n    const getDevices = () => {\r\n        const token = Cookies.get(\"token\");\r\n        const options = {\r\n            method: \"GET\",\r\n            url: \"http://localhost:5000/api/v1/user/all_devices\",\r\n            headers: {'Authorization': 'Bearer '+ token}\r\n        }\r\n        axios(options)\r\n        .then(r => setData(r.data.data));\r\n    }\r\n\r\n    useEffect(() => getDevices(), []);\r\n\r\n    const sort = (colName) => {\r\n        console.log(order)\r\n        if (order.colName === \"asc\") {\r\n            console.log(\"tttttt\")\r\n            const sortedData = [...data].sort((a, b) => \r\n                a[colName].toLowerCase() > b[colName].toLowerCase() ? 1 : -1\r\n            );\r\n            setData(sortedData);\r\n            setOrder(\"dec\");\r\n        }\r\n        if (order.colName === \"dec\") {\r\n            const sortedData = [...data].sort((a, b) => \r\n                a[colName].toLowerCase() < b[colName].toLowerCase() ? 1 : -1\r\n            );\r\n            setData(sortedData);\r\n            setOrder(\"asc\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={() => sort(\"name\")}>Device Name </th>\r\n                        <th onClick={() => sort(\"type\")}>Device Type </th>\r\n                        <th onClick={() => sort(\"_id\")}>ID </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { data.map((d) => (\r\n                        <tr key={d._id}>\r\n                            <td>{d.name}</td>\r\n                            <td>{d.type}</td>\r\n                            <td>{d._id}</td>\r\n                        </tr>\r\n                    )) }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    \r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}